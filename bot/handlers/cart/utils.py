# bot/handlers/cart/utils.py
import logging
from decimal import Decimal
from aiogram.enums import ParseMode
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message, CallbackQuery, InputMediaPhoto, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.text_decorations import html_decoration as html

from .models import get_cart_items, get_cart_details, get_cart_quantity, get_cart_total
from .keyboards import generate_cart_keyboard
from bot.core.config import CART_ITEMS_PER_PAGE  # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç

logger = logging.getLogger(__name__)

async def show_cart(user, message: Message | CallbackQuery, page: int = 1):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.

    :param user: –û–±—ä–µ–∫—Ç TelegramUser.
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ callback-–∑–∞–ø—Ä–æ—Å.
    :param page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
    """
    items = await get_cart_items(user)

    if not items:
        text = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞"
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
        ])
    else:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã
        cart_quantity = await get_cart_quantity(user)
        cart_total = await get_cart_total(user)
        items_text, _, first_item_photo = await get_cart_details(items[0].cart.id)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—É–º–º—É: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ cart_total —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º
        formatted_total = f"{int(cart_total)}" if cart_total == int(cart_total) else f"{cart_total:.2f}"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã
        text = (
            f"{html.bold('–ö–æ—Ä–∑–∏–Ω–∞:')}\n\n"
            f"{items_text}\n\n"
            f"{html.bold(f'{formatted_total} ‚ÇΩ')} * {cart_quantity} —à—Ç. = {html.bold(f'{formatted_total} ‚ÇΩ')}"
        )

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π, –ø–µ—Ä–µ–¥–∞—ë–º cart_quantity –∏ cart_total
        kb = generate_cart_keyboard(
            user,
            items,
            cart_quantity=cart_quantity,  # –î–æ–±–∞–≤–ª—è–µ–º
            cart_total=cart_total,        # –î–æ–±–∞–≤–ª—è–µ–º
            page=page,
            items_per_page=CART_ITEMS_PER_PAGE  # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ CART_ITEMS_PER_PAGE
        )

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    try:
        if isinstance(message, Message):
            if items and first_item_photo:
                await message.answer_photo(
                    photo=first_item_photo,
                    caption=text,
                    reply_markup=kb,
                    parse_mode=ParseMode.HTML
                )
            else:
                await message.answer(
                    text,
                    reply_markup=kb,
                    parse_mode=ParseMode.HTML
                )
        else:
            if items and first_item_photo:
                media = InputMediaPhoto(
                    media=first_item_photo,
                    caption=text,
                    parse_mode=ParseMode.HTML
                )
                try:
                    await message.message.edit_media(media=media, reply_markup=kb)
                except TelegramBadRequest:
                    await message.message.delete()
                    await message.message.answer_photo(
                        photo=first_item_photo,
                        caption=text,
                        reply_markup=kb,
                        parse_mode=ParseMode.HTML
                    )
            else:
                try:
                    await message.message.edit_text(
                        text,
                        reply_markup=kb,
                        parse_mode=ParseMode.HTML
                    )
                except TelegramBadRequest:
                    await message.message.delete()
                    await message.message.answer(
                        text,
                        reply_markup=kb,
                        parse_mode=ParseMode.HTML
                    )
            await message.answer()

    except TelegramBadRequest as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
        if isinstance(message, Message):
            await message.answer(text, reply_markup=kb, parse_mode=ParseMode.HTML)
        else:
            await message.message.delete()
            await message.message.answer(text, reply_markup=kb, parse_mode=ParseMode.HTML)
