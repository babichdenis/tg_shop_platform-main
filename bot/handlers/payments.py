import os
import django
from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from yookassa import Payment
from asgiref.sync import sync_to_async
import logging

logger = logging.getLogger(__name__)

router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "django_app.config.settings")
django.setup()

from django_app.shop.models import Order, TelegramUser


@router.callback_query(F.data.startswith("check_payment_"))
async def check_payment(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:
    - –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω, –ø–æ–º–µ—á–∞–µ–º –∑–∞–∫–∞–∑ –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π.
    - –ò–Ω–∞—á–µ (–Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ) –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert (–≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ) —Å –æ—à–∏–±–∫–æ–π
      –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É, –æ–±–Ω–æ–≤–ª—è—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
      –Ω–æ –ù–ï —Ç—Ä–æ–≥–∞—è —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–∞–º –æ—Å—Ç–∞–ª–∏—Å—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ã).
    """
    order_id = int(callback.data.split("_")[-1])

    try:
        user = await sync_to_async(TelegramUser.objects.get)(telegram_id=callback.from_user.id)
        order = await sync_to_async(Order.objects.get)(id=order_id, user=user)

        if not order.payment_id:
            await callback.answer(
                "–ü–ª–∞—Ç—ë–∂ –µ—â—ë –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.",
                show_alert=True
            )
            return

        payment = await sync_to_async(Payment.find_one)(order.payment_id)

        if payment.status == "succeeded":
            order.is_paid = True
            await sync_to_async(order.save)()

            return_keyboard = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="üõçÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥", callback_data="cat_page_1")]
                ]
            )

            await callback.message.edit_text(
                "‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!\n"
                "–ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Å–æ–±–∏—Ä–∞—Ç—å –≤–∞—à –∑–∞–∫–∞–∑!",
                reply_markup=return_keyboard
            )

        else:
            # –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ -> —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É,
            # –Ω–æ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º alert,
            # –∞ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ù–ï —Ç—Ä–æ–≥–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –æ–ø–ª–∞—Ç–µ.
            new_payment = await sync_to_async(order.create_payment)()
            if not new_payment:
                await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂", show_alert=True)
                return

            confirmation_url = new_payment.confirmation.confirmation_url

            pay_keyboard = InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —Å–Ω–æ–≤–∞",
                            url=confirmation_url
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É",
                            callback_data=f"check_payment_{order.id}"
                        )
                    ]
                ]
            )

            # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –æ–∫–Ω–µ
            await callback.answer(
                "‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –±—ã–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –µ—â—ë —Ä–∞–∑.",
                show_alert=True
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º –¢–û–õ–¨–ö–û inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —Å–æ—Ö—Ä–∞–Ω—è—è —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            await callback.message.edit_reply_markup(pay_keyboard)

    except Exception as e:
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–ø–ª–∞—Ç—ã", show_alert=True)
        logger.error(f"Payment check error: {str(e)}", exc_info=True)

    await callback.answer()
